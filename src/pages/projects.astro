---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import NavBar from "../components/NavBar.astro";
import ProjectCategoryIcon from "../components/ProjectCategoryIcon.astro";
import DisplayProjects from "../components/DisplayProjects.astro";

const projects = await getCollection("projects");
const visibleProjects = projects.filter((project) => !project.data.hidden);

// group projects by category
const groupedProjects = visibleProjects.reduce((acc, project) => {
  const category = project.data.category;
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(project);
  return acc;
}, {});

// Optionally sort categories and projects within categories
const sortedCategories = Object.keys(groupedProjects).sort();
sortedCategories.forEach((category) => {
  groupedProjects[category].sort(
    (a: { data: { title: string } }, b: { data: { title: any } }) =>
      a.data.title.localeCompare(b.data.title)
  );
});
---

<Layout title="projects">
  <NavBar active="projects" />

  <section class="mobile-spacing">
    {
      sortedCategories.map((category) => (
        <>
          <h2 class="project-category-header">
            <span class="white-hover glow-hover">{category}</span>
            <div class="white-hover glow-hover">
              <ProjectCategoryIcon category={category} />
            </div>
          </h2>
          <hr />
          <DisplayProjects
            projects={groupedProjects[category]}
            showCategoryIcon={false}
          />
        </>
      ))
    }
  </section>
</Layout>
